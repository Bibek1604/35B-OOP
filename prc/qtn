/*
 * Create a Student class to simulate a student's profile. The class should have
 * the following attributes: student ID ,name and GPA, Include methods to
 * updateGPA() and printProfile(), Implement functionality to create new student
 * profiles, update GPAs, and print student profiles
 */


 /*
 * Create a BankAccount class to simulate a bank account. 
 * The class should have the following attributes: account number, account holder name, and balance.
 * include methods to deposit(), withdraw(), and checkBalane()
 * Implement functionality to:
 * -Create new accounts
 * -Deposits money into the accounts
 * -Withdraw money
 * -Check the account balance
 */


 
/*
 * Create a ShoppingCart class to simulate an online shopping cart. the class should have the following attributes:
 * cartId, customerName, and items(a list of products). include methods to addItem(),removeItem(), and calculateTotal()
 * Implement functionality to create new shopping carts, add/remove items, and calculate the total cost of items in the cart
 */


 /*
 * Question Design and implement a java program that simulates a financial transaction system
 * Your system should be capable of processing different types of transaction,
 * such as deposits and withdrawls, and alerting if any transaction exceed certain limits.
 * Use interfaces to define common behaviours for transaction and implement these 
 * behaviours in different transaction classes.
 * 
 * Create an interface named Transaction with atleast two methods:
 * - getAmount() which returns the amount of the transaction as double
 * - isValid() which returns a boolean indicating if the transaction is valid based on certain citeria
 * 
 * Implement the Transaction interface in at least three seperate classes, DepositeTransaction and WithdrawalTransaction.
 * Each class should have a constructor that sets a limit for transaction and specific logic to determine if the transaction is valid
 */


 /*
 * Design and implement a java program that simulates a network monitoring system.
 * Your system should be capable of monitoring different types of network devices, such as
 * routers and switches, and alerting if any devices are experiencing errors or downtime.
 * Use interfaces to define common behaviours for network devices and implement these behaviours in different device classes.
 * 
 * Create an interface named NetworkDevice with atleast two methods:
 * 
 * - getStatus() which returns a String indicating the current status of device
 * - isAvailable() which returns a boolean indicating if the device is currently available and functioning correctly.
 * 
 * Implement the NetworkDevice interface in at least three seperate classes, Router and Switch. Each class should have a 
 * constructor that sets specific properties for the device and specific logic to determine its status and availability
 */


/*
 * Design and implement a Java program that simulates the undo feature of a text editor using a stack. 
 * The program should support adding text to the editor and undoing changes. 
 * The stack should store things, each representing a version of the text. 
 * Implement methods for:
 * - Adding text to the editor: addText(String text)
 * - undoing  changes: undo()
 * - getting the current text: getCurrentText()
 */



 
/*
 * Design and implement a simple Java program that prompts the user to enter a string
 * within a specified length, for example between 5 and 20 characters. Your application
 * should throw and handle a custom exception if the user enters a string outside this length.
 * 
 * - InvalidStringLengthException
 * - A custom exception that is thrown when the user enters a string with a length outside the valid range(5 to 20 characters)
 */



/*
 * Design and implement a simple Java application that prompts the user to enter valid email address.
 * Your application should throw and handle a custom exception if the user enters an invalid email address.
 * - InvalidEmailException:
 * - A custom exception that is thrown when the user enters an email address that does not match a valid email pattern
 * (e.g., it should contain '@' and '.' characters).
 */



 /*
 * Write a program that prompts the user to enter five integer values and reads them into an array.
 * The program should consist of the following methods:
 * - a method named "max" that reads an array of integer values and returns the maximum value
 * - a method named "indexOfHighest" that returns the index of the highest element in an array of integers.
 * if more than one such element exists, return the smallest index. invoke the above methods and demonstrate them in the program
 */



 /*
 * Write a program that prompts the user to enter a sentence and reads it into a string. The program should consist of the following methods:
 * - a method named "countVowels" that reads a String and returns the number of vowels in the String
 * - a method named "countConsonants" that reads a String and returns the number of consonants in the String
 * Invoke the above methods and demonstrate them in program
 */
